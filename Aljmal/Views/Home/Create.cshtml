@model Register
@{
    ViewData["Title"] = "Create User";
}
@{
    IFormFile image;
}

<div class="form-container">
    <h2 class="form-title">Create New User</h2>

    <form asp-action="Create" method="post" enctype="multipart/form-data" class="user-form">
        <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
        
        <div class="form-grid">
            <!-- Left Column -->
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-input" placeholder="Enter full name" />
                    <span asp-validation-for="Name" class="validation-message"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-input" placeholder="Enter email address" />
                    <span asp-validation-for="Email" class="validation-message"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="Password" class="form-label"></label>
                    <div class="password-container">
                        <input asp-for="Password" class="form-input" type="password" placeholder="Create a password" />
                        <button type="button" class="toggle-password" aria-label="Show password">👁️</button>
                    </div>
                    <span asp-validation-for="Password" class="validation-message"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                    <input asp-for="PhoneNumber" class="form-input" placeholder="Enter phone number" />
                    <span asp-validation-for="PhoneNumber" class="validation-message"></span>
                </div>
            </div>
            
            <!-- Right Column -->
            <div class="form-column">
                <div class="form-group">
                    <label asp-for="PublicNaame" class="form-label">Public Name</label>
                    <input asp-for="PublicNaame" class="form-input" placeholder="Name displayed publicly" />
                    <span asp-validation-for="PublicNaame" class="validation-message"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="Role" class="form-label"></label>
                    <select asp-for="Role" class="form-select">
                        <option value="">-- Select Role --</option>
                        <option value="Admin">Admin</option>
                        <option value="Seller">Seller</option>
                    </select>
                    <span asp-validation-for="Role" class="validation-message"></span>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Profile Image</label>
                    <div class="file-upload-container">
                        <label class="file-upload-label">
                            <input id="image" type="file" accept="image/*" class="file-upload-input" name="image"/>
                            <span class="file-upload-text">Choose an image...</span>
                            <span class="file-upload-button">Browse</span>
                        </label>
                    </div>
                    <span class="validation-message"></span>
                </div>
                <div class="preview-container" id="imagePreview">
                    <div class="preview-default">No image selected</div>
                </div>

            </div>
        </div>
        
        <div class="form-actions">
            <button type="submit" class="submit-button">Create User</button>
            <a asp-action="Index" class="cancel-button">Cancel</a>
        </div>
    </form>
</div>

@section Styles {
    <style>
        /* Main container styling */
        .form-container {
            max-width: 900px;
            margin: 2rem auto;
            padding: 2rem;
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }

        .form-title {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 2rem;
            font-weight: 600;
        }

        /* Form grid layout */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
        }

        .form-column {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        /* Form elements styling */
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-label {
            font-weight: 500;
            color: #34495e;
            font-size: 0.95rem;
        }

        .form-input, .form-select {
            padding: 0.75rem 1rem;
            border: 1px solid #dfe6e9;
            border-radius: 6px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        /* Password field with toggle */
        .password-container {
            position: relative;
            display: flex;
        }

        .password-container .form-input {
            flex: 1;
            padding-right: 3rem;
        }

        .toggle-password {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #7f8c8d;
            font-size: 1rem;
        }

        /* File upload styling */
        .file-upload-container {
            margin-top: 0.25rem;
        }

        .file-upload-label {
            display: flex;
            cursor: pointer;
        }

        .file-upload-input {
            width: 0.1px;
            height: 0.1px;
            opacity: 0;
            overflow: hidden;
            position: absolute;
            z-index: -1;
        }

        .file-upload-text {
            flex: 1;
            padding: 0.75rem 1rem;
            border: 1px solid #dfe6e9;
            border-radius: 6px 0 0 6px;
            border-right: none;
            color: #7f8c8d;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .file-upload-button {
            padding: 0.75rem 1.5rem;
            background: #f1f2f6;
            color: #2c3e50;
            border: 1px solid #dfe6e9;
            border-radius: 0 6px 6px 0;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .file-upload-label:hover .file-upload-button {
            background: #dfe6e9;
        }

        /* Image preview */
        .preview-container {
            margin-top: 1rem;
            height: 150px;
            border: 2px dashed #dfe6e9;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .preview-default {
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        .preview-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        /* Form actions */
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid #ecf0f1;
        }

        .submit-button {
            padding: 0.75rem 2rem;
            background: #3498db;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .submit-button:hover {
            background: #2980b9;
        }

        .cancel-button {
            padding: 0.75rem 2rem;
            background: #f1f2f6;
            color: #2c3e50;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            text-align: center;
            transition: all 0.2s ease;
        }

        .cancel-button:hover {
            background: #dfe6e9;
        }

        /* Validation styling */
        .validation-summary {
            color: #e74c3c;
            padding: 1rem;
            background: #fadbd8;
            border-radius: 6px;
            margin-bottom: 1.5rem;
        }

        .validation-message {
            color: #e74c3c;
            font-size: 0.85rem;
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }
            
            .form-container {
                padding: 1.5rem;
            }
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Password toggle functionality
        document.querySelector('.toggle-password').addEventListener('click', function() {
            const passwordInput = document.querySelector('#Password');
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.textContent = type === 'password' ? '👁️' : '🔒';
        });

        // Image preview functionality
            document.querySelector('#image').addEventListener('change', function(e) {
        const previewContainer = document.querySelector('#imagePreview');
        const file = e.target.files[0];
        
        if (file) {
            const reader = new FileReader();
            
            reader.onload = function(event) {
                // Clear the preview container but keep the structure
                previewContainer.innerHTML = '';
                const img = document.createElement('img');
                img.src = event.target.result;
                img.style.maxWidth = '100%';
                img.style.maxHeight = '200px';
                img.style.display = 'block';
                img.style.margin = '0 auto';
                previewContainer.appendChild(img);
            }
            
            reader.readAsDataURL(file);
            
            // Update the file text display
            const fileName = file.name.length > 20 
                ? file.name.substring(0, 17) + '...' 
                : file.name;
            document.querySelector('.file-upload-text').textContent = fileName;
        } else {
            // If no file is selected, show the default message again
            previewContainer.innerHTML = '<div class="preview-default">No image selected</div>';
        }
    });
    </script>
}